# in sites-available

# the upstream component nginx needs to connect to
upstream django_pvault {
    # server unix:///path/to/your/mysite/mysite.sock; # for a file socket
    server 127.0.0.1:3033; # for a web port socket (we'll use this first)
}

# configuration of the server
server {
    # the port your site will be served on
    listen      80;
    # the domain name it will serve for
    # substitute your machine's IP address or FQDN
    server_name pvault 10.0.17.222;
    
    charset     utf-8;

    #listen 443 ssl;
    #ssl_certificate /etc/letsencrypt/live/PATH/fullchain.pem;
    #ssl_certificate_key /etc/letsencrypt/live/PATH/privkey.pem;

#    if ($scheme != "https") {
#        rewrite ^ https://$host$uri permanent;
#    } 

    #return 301 https://ola.unical.it/;

    access_log /var/log/nginx/pvault.access.log;
    error_log  /var/log/nginx/pvault.error.log error;

    # max upload size
    client_max_body_size 75M;   # adjust to taste

    # Django media
    location /statics  {
        alias /opt/pVault/system/static;  # your Django project's media files - amend as required
	autoindex on;
    }

    location /media {
        alias /opt/pVault/system/media; # your Django project's static files - amend as required
        autoindex off;
    }

    location /static {
        alias /opt/pVault/system/static; # your Django project's static files - amend as required
        autoindex on;
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_pass  django_pvault;
	uwsgi_param             HTTP_X_FORWARDED_PROTOCOL https;
        include     /opt/pVault/system/uwsgi_setup/uwsgi_params; # the uwsgi_params file you installed
    }
}
